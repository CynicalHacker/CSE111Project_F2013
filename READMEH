A project for CSE 111 (Database Systems), UC Merced, Fall 2013

A database to store simple inventory information for an instructional chemistry
lab.

Written in Python 2.7

############################################################################
            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE 
                        Version 2, December 2004 

     Copyright (C) 2004 Sam Hocevar <sam@hocevar.net> 

     Everyone is permitted to copy and distribute verbatim or modified 
     copies of this license document, and changing it is allowed as long 
     as the name is changed. 

                DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE 
       TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 

      0. You just DO WHAT THE FUCK YOU WANT TO.
############################################################################

--startdb.py--
	
	The main parent function which is designed to connect to a database (and
	create it if it does not exist), authenticate as either user or admin, and
	start the appropriate menu.
	
	Methods of startdb.py:

	----------------------

	conn_to_db(dbname, create=False)

	conn_to_db initializes a database connection to a database with the name
	of the argument passed to it (the string dbname). If the db does not
	exist, it will return None with a message unless create=True is passed.

	If create=True, the program attempts to open makedbschema.sql and execute 
	it line-by-line. An IOException or sql exception here will cause it to
	print an error message and return None.

	After the schema is created, conn_to_db attempts to open filldb.sql and
	execute it line-by-line to populate the database. Again, exceptions here
	will cause it to return None and print a message.

	login_user()
	
	A primitive login function which returns true if the password hash matches
	and false otherwise. Not to be taken seriously.

	clearscreen()
	
	A one-line function which calls the system 'clr' if on an NT system and
	'clear' otherwise.

--myuser.py--
	
	A user menu for non-superusers. This is a wrapper to
	usermenu functions to keep things nice and tidy.

--usermenus.py--

	-----------------

	printmainmenu()
	
	Prints menu with options. A wrapper to make main() less messy.

	labmenu(c)
	
	Get lab number from user. Print chart that shows lab, reactions, and
	compounds with hazards and CAS#s.

	compoundmenu(c)
	
	Takes either a compound name or CAS# (determines which one it is) and
	prints the reactions and labs that use this compound along with its
	CAS# and hazard class.

	reactionmenu(c)
	
	Takes a reaction name and returns all compounds and labs associated.

	clearscreen()

	Clears the screen. What else would it do?

--myadmin.py--

	A wrapper for superuser menus.

--adminmenus.py--

	printmainmenu()

	Same as usermenu.printmainmenu(), but with more options.

	suppliermenu(c)

	A submenu to view/edit suppliers	

	inventorymenu(c)

	A submenu to view/edit the inventory

	print_supplist(c)

	Prints a list of current suppliers

	edit_supplist(c)
	
	Allows for editing of the supplierlist. If a non-existing supplier
	is added, the system allows the user to create a new supplier.

	print_inventory(c)

	Prints the current inventory

	edit_inventory(c)

	Allows for editing of the inventory. Same behavior as edit_supplist(c)

	clearscreen()

	Clears the screen. Duh.
